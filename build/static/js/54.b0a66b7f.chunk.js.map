{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/icons/esm/Mail.js","pages/components/Badges.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","FormGroup","props","ref","classes","className","_props$row","row","other","Object","root","__webpack_exports__","display","flexDirection","flexWrap","name","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_7__","_internal_SwitchBase__WEBPACK_IMPORTED_MODULE_8__","Switch","_props$color","color","_props$edge","edge","_props$size","size","icon","thumb","start","edgeStart","end","edgeEnd","concat","type","checkedIcon","switchBase","input","checked","disabled","track","theme","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","&$checked","transform","&$disabled","&$checked + $track","opacity","&$disabled + $track","colorPrimary","primary","main","&:hover","backgroundColor","action","hoverOpacity","@media (hover: none)","common","black","white","colorSecondary","secondary","sizeSmall","& $thumb","& $switchBase","boxShadow","shadows","borderRadius","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","a","createElement","d","NavLink","React","forwardRef","react__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","assign","innerRef","Card","styled","MuiCard","spacing","Badge","MuiBadge","TabBadge","AppBar","MuiAppBar","Spacer","div","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","IconBadges","mb","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","variant","gutterBottom","badgeContent","mr","_material_ui_icons__WEBPACK_IMPORTED_MODULE_20__","TabBadges","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","value","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","label","px","ButtonBadges","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","BadgeVisibility","_useState","useState","_useState2","_Users_lmendoza_Downloads_asdas_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","invisible","setInvisible","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","control","_material_ui_core__WEBPACK_IMPORTED_MODULE_17__","onChange","Badges","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","aria-label","mt","_material_ui_core__WEBPACK_IMPORTED_MODULE_18__","component","exact","to","my","_material_ui_core__WEBPACK_IMPORTED_MODULE_19__","container","item","xs","md"],"mappings":"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","file":"static/js/54.b0a66b7f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Mail');","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Button,\r\n  CardContent,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Link,\r\n  AppBar as MuiAppBar,\r\n  Badge as MuiBadge,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Switch,\r\n  Tab,\r\n  Tabs,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { Mail as MailIcon } from \"@material-ui/icons\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Badge = styled(MuiBadge)(spacing);\r\n\r\nconst TabBadge = styled(Badge)(spacing);\r\n\r\nconst AppBar = styled(MuiAppBar)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nfunction IconBadges() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Icon Badges\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Examples of badges on icons containing text, using primary and\r\n          secondary colors.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <Badge badgeContent={4} color=\"primary\" mr={4}>\r\n          <MailIcon />\r\n        </Badge>\r\n        <Badge badgeContent={10} color=\"secondary\" mr={4}>\r\n          <MailIcon />\r\n        </Badge>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction TabBadges() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Tab Badges\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Examples of badges on tabs containing text, using primary and\r\n          secondary colors.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <AppBar position=\"static\" color=\"primary\" mb={4}>\r\n          <Tabs value={0}>\r\n            <Tab\r\n              label={\r\n                <TabBadge color=\"secondary\" badgeContent={4} px={4}>\r\n                  Item One\r\n                </TabBadge>\r\n              }\r\n            />\r\n            <Tab label=\"Item Two\" />\r\n            <Tab label=\"Item Three\" />\r\n            <Tab label=\"Item Four\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <AppBar position=\"static\" color=\"secondary\" mb={4}>\r\n          <Tabs value={0}>\r\n            <Tab\r\n              label={\r\n                <TabBadge color=\"primary\" badgeContent={4} px={4}>\r\n                  Item One\r\n                </TabBadge>\r\n              }\r\n            />\r\n            <Tab label=\"Item Two\" />\r\n            <Tab label=\"Item Three\" />\r\n            <Tab label=\"Item Four\" />\r\n          </Tabs>\r\n        </AppBar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction ButtonBadges() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Button Badges\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Examples of badges on buttons containing text, using primary and\r\n          secondary colors.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <Badge color=\"primary\" badgeContent={4} mr={4}>\r\n          <Button variant=\"contained\">Button</Button>\r\n        </Badge>\r\n        <Badge color=\"secondary\" badgeContent={4} mr={4}>\r\n          <Button variant=\"contained\">Button</Button>\r\n        </Badge>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction BadgeVisibility() {\r\n  const [invisible, setInvisible] = useState(false);\r\n\r\n  const handleBadgeVisibility = () => {\r\n    setInvisible(!invisible);\r\n  };\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Badge Visibility\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          The visibility of badges can be controlled using the invisible\r\n          property.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <div>\r\n          <Badge color=\"secondary\" badgeContent={4} invisible={invisible}>\r\n            <MailIcon />\r\n          </Badge>\r\n        </div>\r\n        <FormGroup row>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                color=\"primary\"\r\n                checked={!invisible}\r\n                onChange={handleBadgeVisibility}\r\n              />\r\n            }\r\n            label=\"Show Badge\"\r\n          />\r\n        </FormGroup>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nfunction Badges() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Badges\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Badges\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Badges</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <IconBadges />\r\n          <TabBadges />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <ButtonBadges />\r\n          <BadgeVisibility />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Badges;\r\n"],"sourceRoot":""}