{"version":3,"sources":["pages/maps/GoogleMaps/Default.js","pages/maps/GoogleMaps/Hybrid.js","pages/maps/GoogleMaps/LightStyle.js","pages/maps/GoogleMaps/DarkStyle.js","pages/maps/GoogleMaps/Streetview.js","pages/maps/GoogleMaps/Markers.js","pages/maps/GoogleMaps/index.js"],"names":["Card","styled","MuiCard","spacing","Spacer","div","GoogleMapReactWrapper","_templateObject","Object","taggedTemplateLiteral","Default","_ref","maps","options","center","lat","lng","zoom","react_default","a","createElement","Default_Card","mb","CardContent","Typography","variant","gutterBottom","lib_default","fullscreenControl","mapTypeControl","mapTypeId","MapTypeId","ROADMAP","scaleControl","scrollwheel","streetViewControl","bootstrapURLKeys","key","defaultCenter","defaultZoom","Hybrid_templateObject","Hybrid","Hybrid_Card","Hybrid_Spacer","Hybrid_GoogleMapReactWrapper","HYBRID","LightStyle_templateObject","LightStyle","LightStyle_Card","LightStyle_Spacer","LightStyle_GoogleMapReactWrapper","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyle_templateObject","DarkStyle","DarkStyle_Card","DarkStyle_Spacer","DarkStyle_GoogleMapReactWrapper","Streetview_templateObject","Streetview","panoramaRef","React","createRef","Streetview_Card","Streetview_Spacer","Streetview_GoogleMapReactWrapper","ref","onGoogleApiLoaded","map","panorama","StreetViewPanorama","ReactDOM","findDOMNode","current","position","pov","heading","pitch","visible","setStreetView","apiIsLoaded","yesIWantToUseGoogleMapApiInternals","Markers_templateObject","Markers","Markers_Card","Markers_Spacer","Markers_GoogleMapReactWrapper","Marker","title","renderMarkers","NavLink","forwardRef","props","react_router_dom","assign","innerRef","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","MuiTypography","GoogleMaps","Fragment","Helmet_default","GoogleMaps_Typography","display","GoogleMaps_Breadcrumbs","aria-label","mt","Link","component","exact","to","GoogleMaps_Divider","my","Grid","container","item","xs","md","GoogleMaps_Default","GoogleMaps_Hybrid","GoogleMaps_LightStyle","GoogleMaps_DarkStyle","GoogleMaps_Streetview","GoogleMaps_Markers"],"mappings":"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","file":"static/js/75.9c71a27b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Default({maps}) {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.ROADMAP,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Default Map\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Displays the default road map view.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Default;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Hybrid() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.HYBRID,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Hybrid Map\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Displays a mixture of normal and satellite views.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Hybrid;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction LightStyle() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n      styles: [\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#e9e9e9\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"landscape\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f5f5f5\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 29\r\n            },\r\n            {\r\n              weight: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.arterial\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 18\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.local\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f5f5f5\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi.park\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#dedede\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              visibility: \"on\"\r\n            },\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              saturation: 36\r\n            },\r\n            {\r\n              color: \"#333333\"\r\n            },\r\n            {\r\n              lightness: 40\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.icon\",\r\n          stylers: [\r\n            {\r\n              visibility: \"off\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f2f2f2\"\r\n            },\r\n            {\r\n              lightness: 19\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#fefefe\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#fefefe\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            },\r\n            {\r\n              weight: 1.2\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Light Style\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Light color scheme.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LightStyle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction DarkStyle() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n      styles: [\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              saturation: 36\r\n            },\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 40\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              visibility: \"on\"\r\n            },\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.icon\",\r\n          stylers: [\r\n            {\r\n              visibility: \"off\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            },\r\n            {\r\n              weight: 1.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"landscape\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 29\r\n            },\r\n            {\r\n              weight: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.arterial\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 18\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.local\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 19\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Dark Style\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Dark color scheme.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DarkStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Streetview() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  const apiIsLoaded = (map, maps) => {\r\n    if (map) {\r\n      const panorama = new maps.StreetViewPanorama(\r\n        ReactDOM.findDOMNode(panoramaRef.current),\r\n        {\r\n          position: {\r\n            lat: 42.345573,\r\n            lng: -71.098326\r\n          },\r\n          pov: {\r\n            heading: 160,\r\n            pitch: 0\r\n          },\r\n          visible: true\r\n        }\r\n      );\r\n      map.setStreetView(panorama);\r\n    }\r\n  };\r\n\r\n  const panoramaRef = React.createRef();\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Streetview\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Panoramic 360 degree views from designated roads throughout its\r\n          coverage area.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            ref={panoramaRef}\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n            onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\r\n            yesIWantToUseGoogleMapApiInternals={true}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Streetview;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Markers() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  const getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.ROADMAP,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  const renderMarkers = (map, maps) => {\r\n    new maps.Marker({\r\n      position: {\r\n        lat: 40.712784,\r\n        lng: -74.005941\r\n      },\r\n      map,\r\n      title: \"Hello World!\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Markers\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Identify a location on a map.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n            onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Markers;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Default from \"./Default\";\r\nimport Hybrid from \"./Hybrid\";\r\nimport LightStyle from \"./LightStyle\";\r\nimport DarkStyle from \"./DarkStyle\";\r\nimport Streetview from \"./Streetview\";\r\nimport Markers from \"./Markers\";\r\n\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Divider as MuiDivider,\r\n  Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction GoogleMaps() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Google Maps\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Google Maps\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Maps\r\n        </Link>\r\n        <Typography>Google Maps</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <Default />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Hybrid />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <LightStyle />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <DarkStyle />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Streetview />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Markers />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default GoogleMaps;\r\n"],"sourceRoot":""}