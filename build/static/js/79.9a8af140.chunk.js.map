{"version":3,"sources":["pages/pages/Tasks.js"],"names":["NavLink","React","forwardRef","props","ref","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","Object","assign","innerRef","Card","styled","MuiCard","spacing","CardContent","MuiCardContent","_templateObject","_Users_lmendoza_Downloads_asdas_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","theme","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","TaskWrapper","_templateObject2","palette","grey","body","background","TaskWrapperContent","_templateObject3","TaskAvatars","div","_templateObject4","MessageCircleIcon","MessageCircle","_templateObject5","TaskBadge","_templateObject6","color","TaskNotifications","_templateObject7","TaskNotificationsAmount","_templateObject8","Typography","MuiTypography","TaskTitle","_templateObject9","Lane","_ref","title","description","onContainerLoaded","children","mb","pb","variant","gutterBottom","container","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","fullWidth","_material_ui_icons__WEBPACK_IMPORTED_MODULE_20__","Task","_ref2","content","avatars","badges","map","i","key","_material_ui_lab__WEBPACK_IMPORTED_MODULE_15__","max","avatar","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","src","concat","notifications","demoTasks","green","orange","blue","Tasks","containers","onContainerReady","push","useEffect","dragula","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","display","aria-label","mt","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","component","exact","to","my","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","item","xs","lg","xl"],"mappings":"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","file":"static/js/79.9a8af140.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport \"react-dragula/dist/dragula.css\";\r\n\r\nimport {\r\n  Avatar,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button,\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  Divider as MuiDivider,\r\n  Grid,\r\n  Link,\r\n  Typography as MuiTypography\r\n} from \"@material-ui/core\";\r\n\r\nimport { AvatarGroup } from '@material-ui/lab';\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { orange, green, blue } from \"@material-ui/core/colors\";\r\n\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { MessageCircle } from \"react-feather\";\r\n\r\nimport dragula from \"react-dragula\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst CardContent = styled(MuiCardContent)`\r\n  &:last-child {\r\n    padding-bottom: ${props => props.theme.spacing(4)}px;\r\n  }\r\n`;\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst TaskWrapper = styled(Card)`\r\n  border: 1px solid ${props => props.theme.palette.grey[300]};\r\n  margin-bottom: ${props => props.theme.spacing(4)}px;\r\n  cursor: grab;\r\n  \r\n  &:hover {\r\n    background: ${props => props.theme.body.background};\r\n  }\r\n`;\r\n\r\nconst TaskWrapperContent = styled(CardContent)`\r\n  position: relative;\r\n\r\n  &:last-child {\r\n    padding-bottom: ${props => props.theme.spacing(4)}px;\r\n  }\r\n`;\r\n\r\nconst TaskAvatars = styled.div`\r\n  margin-left: 8px;\r\n`\r\n\r\nconst MessageCircleIcon = styled(MessageCircle)`\r\n  color: ${props => props.theme.palette.grey[500]};\r\n  vertical-align: middle;\r\n`\r\n\r\nconst TaskBadge = styled.div`\r\n  background: ${props => props.color};\r\n  width: 40px;\r\n  height: 6px;\r\n  border-radius: 6px;\r\n  display: inline-block;\r\n  margin-right: ${props => props.theme.spacing(2)}px;\r\n`\r\n\r\nconst TaskNotifications = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  bottom: ${props => props.theme.spacing(4)}px;\r\n  right: ${props => props.theme.spacing(4)}px;\r\n`\r\n\r\nconst TaskNotificationsAmount = styled.div`\r\n  color: ${props => props.theme.palette.grey[500]};\r\n  font-weight: 600;\r\n  margin-right: ${props => props.theme.spacing(1)}px;\r\n  line-height: 1.75;\r\n`\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst TaskTitle = styled(Typography)`\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  margin-right: ${props => props.theme.spacing(10)}px;\r\n`\r\n\r\nfunction Lane({title, description, onContainerLoaded, children}) {\r\n  const handleContainerLoaded = container => {\r\n    if (container) {\r\n      onContainerLoaded(container);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent pb={0}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" mb={4}>\r\n          {description}\r\n        </Typography>\r\n        <div ref={handleContainerLoaded}>{children}</div>\r\n        <Button color=\"primary\" variant=\"contained\" fullWidth>\r\n          <AddIcon />\r\n          Add new task\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Task({ content, avatars }) {\r\n  return (\r\n    <TaskWrapper mb={4}>\r\n      <TaskWrapperContent>\r\n        {content.badges && content.badges.map((color, i) => <TaskBadge color={color} key={i} />)}\r\n\r\n        <TaskTitle variant=\"body1\" gutterBottom>\r\n          {content.title}\r\n        </TaskTitle>\r\n        \r\n        <TaskAvatars>\r\n          <AvatarGroup max={3}>\r\n            {avatars && avatars.map((avatar, i) => <Avatar src={`/static/img/avatars/avatar-${avatar}.jpg`} key={i} />)}\r\n          </AvatarGroup>\r\n        </TaskAvatars>\r\n\r\n        {content.notifications &&\r\n          <TaskNotifications>\r\n            <TaskNotificationsAmount>\r\n              {content.notifications}\r\n            </TaskNotificationsAmount>\r\n            <MessageCircleIcon />\r\n          </TaskNotifications>\r\n        }\r\n      </TaskWrapperContent>\r\n    </TaskWrapper>\r\n  );\r\n}\r\n\r\nconst demoTasks = [\r\n  {\r\n    title: \"Redesign the homepage\",\r\n    badges: [green[600], orange[600]],\r\n    notifications: 2\r\n  },\r\n  {\r\n    title: \"Upgrade dependencies to latest versions\",\r\n    badges: [green[600]],\r\n    notifications: 1\r\n  },\r\n  {\r\n    title: \"Google Adwords best practices\"\r\n  },\r\n  {\r\n    title: \"Improve site speed\",\r\n    badges: [green[600]],\r\n    notifications: 3\r\n  },\r\n  {\r\n    title: \"Stripe payment integration\",\r\n    badges: [blue[600]]\r\n  }\r\n];\r\n\r\nfunction Tasks() {\r\n  const containers = [];\r\n\r\n  const onContainerReady = container => {\r\n    containers.push(container);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dragula(containers);\r\n  }, [containers]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Tasks\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Tasks\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Pages\r\n        </Link>\r\n        <Typography>Tasks</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} lg={4} xl={4}>\r\n          <Lane\r\n            title=\"Backlog\"\r\n            description=\"Nam pretium turpis et arcu. Duis arcu.\"\r\n            onContainerLoaded={onContainerReady}\r\n          >\r\n            <Task content={demoTasks[0]} avatars={[1, 2, 3, 4]} />\r\n            <Task content={demoTasks[2]} avatars={[2]} />\r\n            <Task content={demoTasks[3]} avatars={[2, 3]} />\r\n            <Task content={demoTasks[1]} avatars={[]} />\r\n            <Task content={demoTasks[4]} avatars={[]} />\r\n          </Lane>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} xl={4}>\r\n          <Lane\r\n            title=\"In Progress\"\r\n            description=\"Curabitur ligula sapien, tincidunt non.\"\r\n            onContainerLoaded={onContainerReady}\r\n          >\r\n            <Task content={demoTasks[2]} avatars={[3, 1, 2]} />\r\n            <Task content={demoTasks[4]} avatars={[2]} />\r\n          </Lane>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4} xl={4}>\r\n          <Lane\r\n            title=\"Completed\"\r\n            description=\"Aenean posuere, tortor sed cursus feugiat.\"\r\n            onContainerLoaded={onContainerReady}\r\n          >\r\n            <Task content={demoTasks[3]} avatars={[1, 2]} />\r\n            <Task content={demoTasks[2]} avatars={[4]} />\r\n            <Task content={demoTasks[0]} avatars={[]} />\r\n          </Lane>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n"],"sourceRoot":""}