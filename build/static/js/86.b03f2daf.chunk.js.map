{"version":3,"sources":["pages/tables/SimpleTable.js"],"names":["NavLink","React","forwardRef","props","ref","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","Object","assign","innerRef","Card","styled","MuiCard","spacing","CardContent","MuiCardContent","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","CustomTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","CustomTableRow","TableRow","_templateObject","_Users_lmendoza_Downloads_asdas_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","id","createData","name","calories","fat","carbs","protein","rows","SimpleTableDemo","mb","pb","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","variant","gutterBottom","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","align","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","map","row","key","component","scope","CustomizedTableDemo","SimpleTable","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","display","aria-label","mt","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","exact","to","my","_material_ui_core__WEBPACK_IMPORTED_MODULE_17__","container","item","xs"],"mappings":"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","file":"static/js/86.b03f2daf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CardContent as MuiCardContent,\r\n  Divider as MuiDivider,\r\n  Paper as MuiPaper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst NavLink = React.forwardRef((props, ref) => (\r\n  <RouterNavLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst CardContent = styled(MuiCardContent)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst CustomTableRow = styled(TableRow)`\r\n  &:nth-of-type(odd) {\r\n    background-color: rgba(0, 0, 0, 0.025);\r\n  }\r\n`;\r\n\r\n// Data\r\nlet id = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\nfunction SimpleTableDemo() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent pb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Simple Table\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          A simple example with no frills.\r\n        </Typography>\r\n      </CardContent>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat (g)</TableCell>\r\n              <TableCell align=\"right\">Carbs (g)</TableCell>\r\n              <TableCell align=\"right\">Protein (g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction CustomizedTableDemo() {\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent pb={1}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Customized Table\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          If you have been reading the overrides documentation page but you are\r\n          not confident jumping in, here are examples of how you can change the\r\n          look of a <code>TableCell</code>.\r\n        </Typography>\r\n      </CardContent>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <CustomTableCell>Dessert (100g serving)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Calories</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Fat (g)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Carbs (g)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Protein (g)</CustomTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <CustomTableRow key={row.id}>\r\n                <CustomTableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.calories}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.fat}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.carbs}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.protein}</CustomTableCell>\r\n              </CustomTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction SimpleTable() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Simple Table\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Simple Table\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Tables\r\n        </Link>\r\n        <Typography>Simple Table</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12}>\r\n          <SimpleTableDemo />\r\n          <CustomizedTableDemo />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SimpleTable;\r\n"],"sourceRoot":""}